-- deg 	   # reps     max_mult   dim_R
------------------------------------
-- 1 |	    1	     1	            81
-- 2 |	    3	     1	          3321
-- 3 |	    9	     3 	         91881
-- 4 |	   25	     4	       1929501
-- 5 |	   59	    13	      32801517
-- 6 |	  163	    93	     470155077
-- 7 |	  288	   301 	    5843355957
-- 8 |	  619	   608     64276915527
restart
loadPackage "SchurRings"
----------
unsym = method()
unsym(Thing) := el -> unsym(el,{})
unsym(Thing,List) := (el,pts) -> (
    R := ring el;
    if schurLevel(R) == 0 then rez = rez + el * (product for p in pts list (p#0)_(p#1))
    else (
        lFel := listForm el;
    par := if #pts > 0 then (last pts)#1 else {0};
    for trm in lFel do if trm#0>=par then unsym(trm#1,pts | {(R,trm#0)}) else break;
        )
    )
--- how about a sym function?
S = schurRing(s,3)
T = schurRing(S,t,3)
U = schurRing(T,u,3)
V = schurRing(U,v,3)
load "quad_Schur_data.m2"

apply(3..8,i-> dim value(concatenate("PF", toString(i) )) )
dim par9

-- we want to know if any of the low multiplicity modules in degree 10 can't come from the low multiplicity modules in degree 9:



--apply(3..8,i-> sub((dim value(concatenate("PF", toString(i+1) )))/(dim value(concatenate("PF", toString(i) ))),RR))


rez = 0
unsym(PF4*g1-PF5,{})
toString rez
-- found
s_(3,1,1)*t_(3,1,1)*u_(3,1,1)*v_(3,1,1) + s_(2,2,1)*t_(2,2,1)*u_(2,2,1)*v_(2,2,1)
dim oo
rez = 0
unsym(PF3*g1^2-PF5,{})
toString rez
-- this found nothing new

rez = 0
unsym(PF5*g1-PF6,{})
rez
toString rez
--
--the only mingens are:
mg6= 2*v_(2,2,2)*u_(2,2,2)*t_(2,2,2)*s_(2,2,2) + v_(2,2,2)*u_(3,3)*s_6*t_(3,3) + 2*v_(2,2,2)*u_(2,2,2)*s_(4,1,1)*t_(3,3) + 2*v_(2,2,2)*u_(2,2,2)*t_(3,3)*s_(3,3) + v_(2,2,2)*u_(2,2,2)*t_(3,2,1)*s_(3,2,1)
dim mg6

MG6=v_(2,2,2)*u_(3,3)*s_6*t_(3,3)+v_(2,2,2)*u_(2,2,2)*t_(3,2,1)*s_(3,2,1)+2*v_(2,2,2)*u_(2,2,2)*t_(2,2,2)*s_(2,2,2)+2*v_(2,2,2)*u_(2,2,2)*s_(4,1,1)*t_(3,3)+2*v_(2,2,2)*u_(2,2,2)*t_(3,3)*s_(3,3)+v_(2,2,2)*u_(3,3)*s_6*s_(3,3)+v_(2,2,2)*t_(3,3)*s_6*s_(3,3)+u_(2,2,2)*t_(3,3)*s_6*s_(3,3)+2*u_(2,2,2)*t_(2,2,2)*s_(3,3)*v_(3,3)+2*u_(2,2,2)*t_(2,2,2)*v_(4,1,1)*s_(3,3)+u_(2,2,2)*t_(2,2,2)*s_(3,2,1)*v_(3,2,1)+t_(2,2,2)*s_(3,3)*s_6*v_(3,3)+2*t_(2,2,2)*s_(2,2,2)*u_(4,1,1)*v_(3,3)+2*t_(2,2,2)*s_(2,2,2)*v_(3,3)*u_(3,3)+t_(2,2,2)*s_(2,2,2)*v_(3,2,1)*u_(3,2,1)+s_(2,2,2)*v_(3,3)*s_6*u_(3,3)+2*s_(2,2,2)*v_(2,2,2)*t_(4,1,1)*u_(3,3)+2*s_(2,2,2)*v_(2,2,2)*u_(3,3)*t_(3,3)+s_(2,2,2)*v_(2,2,2)*u_(3,2,1)*t_(3,2,1)+2*u_(2,2,2)*s_(2,2,2)*v_(4,1,1)*t_(3,3)+2*u_(2,2,2)*s_(2,2,2)*t_(3,3)*v_(3,3)+s_(2,2,2)*t_(3,3)*s_6*v_(3,3)+2*v_(2,2,2)*u_(2,2,2)*t_(4,1,1)*s_(3,3)+u_(2,2,2)*s_(2,2,2)*t_(3,2,1)*v_(3,2,1)+t_(2,2,2)*v_(3,3)*s_6*u_(3,3)+2*t_(2,2,2)*v_(2,2,2)*s_(4,1,1)*u_(3,3)+2*t_(2,2,2)*v_(2,2,2)*u_(3,3)*s_(3,3)+t_(2,2,2)*v_(2,2,2)*u_(3,2,1)*s_(3,2,1)+s_(2,2,2)*t_(3,3)*s_6*u_(3,3)+u_(2,2,2)*t_(3,3)*s_6*v_(3,3)+2*u_(2,2,2)*t_(2,2,2)*s_(4,1,1)*v_(3,3)+2*t_(2,2,2)*v_(2,2,2)*u_(4,1,1)*s_(3,3)+u_(2,2,2)*s_(3,3)*s_6*v_(3,3)+t_(2,2,2)*s_(3,3)*s_6*u_(3,3)+2*s_(2,2,2)*u_(2,2,2)*t_(4,1,1)*v_(3,3)+2*t_(2,2,2)*s_(2,2,2)*v_(4,1,1)*u_(3,3)+2*s_(2,2,2)*v_(2,2,2)*u_(4,1,1)*t_(3,3);
dim oo

rez = 0
unsym(PF6*g1-PF7,{})
toString rez
-- no negative terms means probably no new mingens
-- only new mingens are:

rez = 0
unsym(PF7*g1-PF8,{})
toString rez
-- the only new mingen seems to be
2*(s_(4,4)*t_(4,4)*u_(4,4)*v_(4,2,2)+s_(4,4)*t_(4,4)*u_(4,2,2)*v_(4,4)+s_(4,4)*t_(4,2,2)*u_(4,4)*v_(4,4)+s_(4,2,2)*t_(4,4)*u_(4,4)*v_(4,4))
dim oo

rez = 0
unsym(PF6*g1^2-PF8,{})
toString rez
-- this found no other new mingens


rez = 0
unsym(PF8*g1-par9,{})
toString rez
-- found at least this:
s_(5,4)*t_(5,4)*u_(5,4)*(v_(5,2,2)+v_(4,3,2))+s_(5,4)*t_(5,4)*v_(5,4)*(u_(5,2,2)+u_(4,3,2))+s_(5,4)*v_(5,4)*u_(5,4)*(t_(5,2,2)+t_(4,3,2))+v_(5,4)*t_(5,4)*u_(5,4)*(s_(5,2,2)+s_(4,3,2))
dim oo



rez = 0
unsym(F9Low*g1-F10Low,{})
toString rez
--found this:
s_(5,5)*t_(5,5)*u_(5,5)*v_(4,3,3)+s_(5,5)*t_(5,5)*v_(5,5)*u_(4,3,3)+s_(5,5)*v_(5,5)*u_(5,5)*t_(4,3,3)+v_(5,5)*t_(5,5)*u_(5,5)*s_(4,3,3)
dim oo
printWidth = 1000
rez = 0
unsym(F10Low*g1-F11Low,{})
toString rez
-- found at least these:
-2*v_(5,3,3)*u_(7,4)*t_(8,3)*s_(8,3)
-5*v_(5,3,3)*u_(7,4)*t_(7,4)*s_(8,3)
-14*v_(7,3,1)*u_(7,4)*s_(9,1,1)*t_(7,4)
-3*v_(7,2,2)*u_(8,3)*t_(8,3)*s_(8,3)
-v_(7,2,2)*u_(7,4)*t_(8,3)*s_(8,3)
-3*v_(7,2,2)*u_(7,4)*t_(7,4)*s_(8,3)
-v_(6,5)*u_(7,2,2)*t_(7,4)*s_(7,4)
-14*v_(6,4,1)*u_(7,4)*s_(9,1,1)*t_(7,4)
-13*v_(5,5,1)*u_(7,4)*t_(8,2,1)*s_(8,3)
-7*v_(5,5,1)*u_(7,4)*s_(9,1,1)*t_(7,4)
-10*v_(5,5,1)*u_(7,3,1)*s_(9,1,1)*t_(7,4)
-11*v_(5,5,1)*u_(7,3,1)*t_(7,4)*s_(9,2)
-27*v_(5,5,1)*u_(7,2,2)*t_(8,3)*s_(8,3)
-34*v_(5,5,1)*u_(6,5)*t_(7,2,2)*s_(8,3)
-29*v_(5,5,1)*u_(6,5)*s_(7,2,2)*t_(6,5)
-6*v_(5,5,1)*u_(6,5)*t_(8,2,1)*s_(8,3)
-16*v_(5,5,1)*u_(6,5)*t_(7,4)*s_(8,2,1)
-2*v_(5,5,1)*u_(6,5)*t_(6,5)*s_(8,2,1)
-7*v_(5,5,1)*u_(6,4,1)*s_(9,1,1)*t_(7,4)
-v_(5,5,1)*u_(6,4,1)*t_(7,4)*s_(9,2)
-35*v_(5,5,1)*u_(5,5,1)*t_(8,3)*s_(8,3)
-2*v_(5,5,1)*u_(5,5,1)*t_(8,2,1)*s_(9,2)
-40*v_(5,5,1)*u_(5,5,1)*t_(7,4)*s_(8,3)
-41*v_(5,5,1)*u_(5,5,1)*t_(7,2,2)*s_(9,2)
-43*v_(5,5,1)*u_(5,5,1)*t_(7,2,2)*s_(9,1,1)
-30*v_(5,5,1)*u_(5,5,1)*t_(6,5)*s_(8,3)
-34*v_(5,5,1)*u_(5,5,1)*t_(6,5)*s_(7,4)
-21*v_(5,5,1)*u_(5,5,1)*t_(6,5)*s_(6,5)
-19*v_(5,5,1)*u_(5,5,1)*t_(5,5,1)*s_(9,2)
-25*v_(5,5,1)*u_(5,5,1)*t_(5,5,1)*s_(9,1,1)
-16*v_(4,4,3)*u_(7,4)*t_(7,4)*s_(7,4)
-15*v_(4,4,3)*u_(5,5,1)*t_(8,3)*s_(8,3)
-42*v_(4,4,3)*u_(5,5,1)*t_(7,4)*s_(8,3)
-19*v_(4,4,3)*u_(5,5,1)*t_(6,5)*s_(6,5)
-3*v_(4,4,3)*u_(6,5)*t_(7,2,2)*s_(8,3)
-30*v_(4,4,3)*u_(6,5)*s_(7,2,2)*t_(6,5)
-8*v_(4,4,3)*u_(4,4,3)*t_(8,3)*s_(8,3)
-v_(4,4,3)*u_(4,4,3)*t_(6,5)*s_(8,3)
-4*v_(5,3,3)*u_(6,5)*t_(7,4)*s_(7,4)


